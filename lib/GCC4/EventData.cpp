#include "EventData.h"

// Global unique identifier (GUID); generated by something like from within visual studio
const EventType EvtDataNewActor::sk_EventType(0x77DD2B30);
const EventType EvtDataRemoteEnvironmentLoaded::sk_EventType(0x77DD2B31);
const EventType EvtDataEnvironmentLoaded::sk_EventType(0x77DD2B32);
const EventType EvtDataDestroyActor::sk_EventType(0x77DD2B33);
const EventType EvtDataRequestDestroyActor::sk_EventType(0x77DD2B34);
const EventType EvtDataRequestNewActor::sk_EventType(0x77DD2B35);
const EventType EvtDataMoveActor::sk_EventType(0x77DD2B36);
const EventType EvtDataPhysCollision::sk_EventType(0x77DD2B37);
const EventType EvtDataPhysSeparation::sk_EventType(0x77DD2B38);
const EventType EvtDataPhysTriggerEnter::sk_EventType(0x77DD2B39);
const EventType EvtDataPhysTriggerLeave::sk_EventType(0x77DD2B3A);
const EventType EvtDataRemoteClient::sk_EventType(0x77DD2B3B);
const EventType EvtDataNetworkPlayerActorAssignment::sk_EventType(0x77DD2B3C);
const EventType EvtDataDecompressRequest::sk_EventType(0x77DD2B3D);
const EventType EvtDataDecompressProgress::sk_EventType(0x77DD2B3E);
const EventType EvtDataPlaySound::sk_EventType(0x77DD2B3F);

void RegisterEngineScriptEvents()
{
    REGISTER_SCRIPT_EVENT(EvtDataRequestDestroyActor, EvtDataRequestDestroyActor::sk_EventType);
    REGISTER_SCRIPT_EVENT(EvtDataPhysCollision, EvtDataPhysCollision::sk_EventType);
    REGISTER_SCRIPT_EVENT(EvtDataPlaySound, EvtDataPlaySound::sk_EventType);
}

void EvtDataPhysCollision::VBuildEventData()
{
    //TODO
    //m_eventData.AssignNewTable(LuaStateManager::GetInstance()->GetLuaState());
    //m_eventData.SetInteger("actorA", m_ActorA);
    //m_eventData.SetInteger("actorB", m_ActorB);
}

void EvtDataPlaySound::VBuildEventData()
{
    //TODO
}

